definitions:
  models.CreateResponse:
    properties:
      id:
        type: integer
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.GameLog:
    properties:
      action:
        type: string
      details:
        type: string
      id:
        type: integer
      player_id:
        type: integer
      timestamp:
        type: string
    required:
    - action
    - details
    - player_id
    type: object
info:
  contact:
    name: Steven Poon
    url: https://github.com/RYANCOAL9999
    email: lmf242003@gmail.com    
  description: This is a payment processing system server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Payment Processing System API
  version: "1.0"
paths:
  /game_logs:
    get:
      consumes:
      - application/json
      description: Fetches a list of game logs, allowing optional filtering by player
        ID, action, start time, end time, and limit. If more than one log is found,
        returns the first log. Returns a list of logs otherwise.
      parameters:
      - description: Filter logs by player ID
        in: query
        name: player_id
        type: integer
      - description: Filter logs by action
        in: query
        name: action
        type: string
      - description: 'Start time for filtering logs (format: YYYY-MM-DDTHH:MM:SSZ)'
        in: query
        name: start_time
        type: string
      - description: 'End time for filtering logs (format: YYYY-MM-DDTHH:MM:SSZ)'
        in: query
        name: end_time
        type: string
      - description: Limit the number of logs returned
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of game logs matching the criteria
          schema:
            items:
              $ref: '#/definitions/models.GameLog'
            type: array
        "400":
          description: Bad request due to invalid query parameters
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Retrieve game logs
      tags:
      - game_logs
    post:
      consumes:
      - application/json
      description: Adds a new game log entry with the provided details. The request
        body must contain the player ID, action, timestamp, and details. Returns the
        ID of the newly created log entry if successful.
      parameters:
      - description: Details of the game log to be created
        in: body
        name: game_log
        required: true
        schema:
          $ref: '#/definitions/models.GameLog'
      produces:
      - application/json
      responses:
        "201":
          description: Game log created successfully, returns the ID of the new game
            log
          schema:
            $ref: '#/definitions/models.CreateResponse'
        "400":
          description: Bad request due to invalid input data
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a game log
      tags:
      - game_logs
swagger: "2.0"
