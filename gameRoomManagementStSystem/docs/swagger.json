{
    "swagger": "2.0",
    "info": {
        "description": "This is a Game Room Management System server.",
        "title": "Game Room Management System API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Steven Poon",
            "url": "https://github.com/RYANCOAL9999",
            "email": "lmf242003@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "paths": {
        "/reservations": {
            "get": {
                "description": "Get a list of reservations based on optional filters such as room ID, start date, end date, and limit. Returns reservations that match the criteria.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservations"
                ],
                "summary": "Retrieve reservations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filter reservations by room ID",
                        "name": "room_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter reservations starting from this date (format: YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter reservations ending at this date (format: YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit the number of results returned",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of reservations matching the criteria",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ReservationRoom"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request due to invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new reservation for a specified room if the room is available. The request body must include the room ID, date of reservation, and player IDs. If successful, returns the ID of the created reservation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservations"
                ],
                "summary": "Create a reservation",
                "parameters": [
                    {
                        "description": "Reservation details to be created",
                        "name": "reservation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Reservation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Reservation created successfully, returns the ID of the new reservation",
                        "schema": {
                            "$ref": "#/definitions/models.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request due to invalid input or date format",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rooms": {
            "get": {
                "description": "Get a list of all rooms available in the database along with their details such as name, status, description, and player IDs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Retrieve all rooms",
                "responses": {
                    "200": {
                        "description": "List of rooms",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Room"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing room in the database. The request body should include the room's ID, name, status, description, and player IDs. The ID is used to identify the room to be updated.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Update a room",
                "parameters": [
                    {
                        "description": "Room details to be updated",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Room"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update successful",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request due to invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new room to the database with the provided name, description, and status. PlayerIDs are optional and can be set later.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Create a new room",
                "parameters": [
                    {
                        "description": "Room details to be created",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Room"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID of the created room",
                        "schema": {
                            "$ref": "#/definitions/models.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request due to invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rooms/{id}": {
            "get": {
                "description": "Fetch details of a specific room from the database identified by its ID. Returns room details including name, status, description, and player IDs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Retrieve a room by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the room",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Room"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a specific room from the database using its ID. If the room exists, it will be deleted.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Delete a room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete successful",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.PlayerRank": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "lv": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Reservation": {
            "type": "object",
            "required": [
                "date",
                "player_ids",
                "room_id"
            ],
            "properties": {
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "player_ids": {
                    "type": "string"
                },
                "room_id": {
                    "type": "integer"
                }
            }
        },
        "models.ReservationRoom": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "player": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PlayerRank"
                    }
                },
                "room_id": {
                    "type": "integer"
                }
            }
        },
        "models.Room": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "player_ids": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.Status"
                }
            }
        },
        "models.Status": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "StatusAvailable",
                "StatusOccupied",
                "StatusMaintenance",
                "StatusClosed"
            ]
        },
        "models.SuccessResponse": {
            "type": "object"
        }
    }
}